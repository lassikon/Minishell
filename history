echo hello
exit
exit
ls >out
exit
echo hehe
exit
exit
env
./minishell
env
exit
env
exit
env
exit
ls
echo hi | cd 123 | echo hi
echo hi | export NAME=Lassi | echo hi
env
ls | export NAME=Lassi | wc
env
export
export | wc
export | sort
env
cd ..
env
exit
env
env | sort
make clean
exit
echo $HOME
echo $HOME/Docs
make clean
exit
echo hi >>>out
echo hi >>>out
echo hi > >out
cat > >
cat > >out
cat < <
cat < <
cat < <
cat < <
cat <"<"
ls | echo hi
asdad | echo "hi
exit
asdad | echo "hi
asdasd
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
exit
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
asfaf | asdad
exit
fhdi | thgitdhgioersoihgoershooeshdpoojetdpeh
fhdi | thgitdhgioersoihgoershooeshdpoojetdpeh
hbdfiobdjfzo;jbgdofhboidxghbo;hd | i
hbdfiobdjfzo;jbgdofhboidxghbo;hd | i | askjdkasjdlk | alskkdlakdl;kad;lka;ldk
hbdfiobdjfzo;jbgdofhboidxghbo;hd | i | askjdkasjdlk | alskkdlakdl;kad;lka;ldk
hbdfiobdjfzo;jbgdofhboidxghbo;hd | i | askjdkasjdlk | alskkdlakdl;kad;lka;ldk
exit
ls
ls | ls
cat < <
cat < <
cat < <
cat < <
echo hi | cat < <
echo hi | cat < <
|
||
|
echo bonjour > $test w/ t
mkdir w
echo bonjour > $test w/ t
echo bonjour > $test w/t
make clean
ls |
exit
ls |
|
exit
|
echo "hi
exit
echo "hi
exit
echo "hi
ls |
|
<<<cat
<<<cat
<<<cat
<<<cat
<<<cat
exit
echo "hi
make clean
exit
echo "hi
<<<cat
<>< cat
< < cat
echo hi >out
echo hi >>out
echo hi >>out
echo hi >>>
echo hi >>>out
exit
cat <
exit
ls >out
cat <
cat < <
cat >>>
cat >>>out
cat ><out
cat ><
cat <>
exit
ls >>out
exit
ls >>out
exit
echo $PWD
ls
echo hey
echo $PWD
cat >>>
cat ><>
cat ><><><>>
exit
echo $PWD
echo $PWD
exit
cat >in
cat < in
grep hi <in
exit
grep hi <in
exit
grep hi <in
exit
grep hi <in
grep hi <in
grep hi <in
grep hi <in
grep hi <in
grep hi <in
grep hi <in
exit
grep hi <in
exit
grep hi <in
grep hi <in
grep hi <in <in2
exit
grep hi <in <in2
exit
grep hi <in <in2
exit
grep hi <in
exit
echo "hello     42"
echo <in "hello     42"
echo <"in" "hello     42"
exit
echo <"in" "hello     42"
exit
echo <"in" "hello     42"
exit
echo <"in" "hello     42"
exit
echo <"in" "hello     42"
exit
echo <"in" "hello     42"
exit
cat < <
cat <<<
cat >>>
cat <<<
cat >>>
cat >> >
exit
cat >> >
cat >> >>
cat >>>
cat > >
cat >   >
cat ><
cat <<<
exit
$?
kjslkdjf
exit
aslkdad
exit
aslkdad
exit
aslkdad
exit
aslkdad
exit
aslkdad
exit
aslkdad
echo $?
exit
aslkdad
exit
aslkdad
exit
<<1
ls
exit
ls
exit > out
exit
exit 5857 57
exit 364
exit
export
exit
ls
export +hello=1
export hello+=1
cat
cat
$?
<< EOF cat
g
<< EOF cat
<< EOF cat
ls
<< EOF cat
<< EOF cat
<< EOF cat
<< EOF cat
ls
<< EOF cat
<< EOF cat
<< EOF cat
<< EOF cat
cat
cat
ls
pwd
export PATH=$PATH:/Users/lkonttin/minishell
export
export
exit
export
exit
exit
export
exit
export
export hello1=hi
env
export PATH=$PATH:/Users/lkonttin/minishell
env
env
export
minishell
export
env
exit
ls
ls
ls
exit
export PATH=$PATH:/Users/lkonttin/minishell
minishell
exit
ls
cp
exit
./copyshell 
export PATH=$PATH:/Users/lkonttin/minishell
copyshell
copyshell
copyshell
copyshell
copyshell
copyshell
copyshell
exit
exit
mkdir test
export PATH=$PATH:/Users/lkonttin/minishell
test
test
test
test
test
exit
exit
ls
export PATH=$PATH:/Users/lkonttin/minishell
libft
minishell.c
<<EOF
<<E
ls
<<E
<<E
<<E
<<E
<<E
<<E
<<E
<<E
<<E
ls
<<E
<<E
env
exit
test
exit
env
export PATH=$PATH:$(pwd)
env
exit
env
test
$?
exit >
exit < out
exit > <
echo >
exit
exit < >
exit <EOF
exit <<EOF
$HOME$PWD
export PATH=$PATH:$(pwd)
env
exit
env
exit 4545 23434
exit > out
exit > out
exit < in
export +hello=1
exit
exit > out
exit > out
export PATH=$PATH:$(pwd)
env
env
exit
env
exit
env
exit
env
exit
env
exit
env
exit
env
export PATH=$PATH:$(pwd)
env
exit
<<1
ls
<<1
exit <<1
<<1
<<1
exit
<<1
exit
<<1
exit
<<1
ls
<<1
<<1
exit > out
cat
echo $?
exit
cat
cat
cat
exit
cat
cat
cat
cat
<<1
<<1
exit
<<1
<<1
ls
sleep 4
sleep 4
sleep 4 > out2
sleep 4 > out2
sleep 4 > out2
sleep 4 > out2
sleep 4 > out2
sleep 4 > out2
sleep 2 > out2
sleep 2 > out2
sleep 2 > out2
sleep 2 > out2
sleep 2 > out2
sleep 2 > out2
sleep 2 > out2
sleep 2 > out2
sleep 2 > out2
sleep 2 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
exit
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
sleep 1 > out2
exit > out
export NAME=HELLO
env
export $NAME=hey
env
exit
ls
exit
test
echo $?
test
test
echo $?
mkdir test1
test1
exit
libft
export +hello=1
exit < in
cat <in
mdkir in
mkdir in
rm -rf in
touch in
exit <in
exit >out2
exit <in2
cat
exit
env
echo $SHELL
echo hi
echo $PWD
askdjkajsd
cat | cat | ls
cat | cat | ls
echo Type a command line, then use ctrl-C and press "Enter". The buffer should be clean and there should be nothing left to execute.
Can we navigate through history using Up and Down? Can we retry some command?
Execute commands that should not work like 'dsbksdgbksdghsd'. Ensure minishell doesn't crash and prints an error.
'cat | cat | ls' should behave in a "normal way".
Try to execute a long command with a ton of arguments.
Have fun with that beautiful minishell and enjoy it!
echo Type a command line, then use ctrl-C and press "Enter". The buffer should be clean and there should be nothing left to execute.
Can we navigate through history using Up and Down? Can we retry some command?
Execute commands that should not work like 'dsbksdgbksdghsd'. Ensure minishell doesn't crash and prints an error.
'cat | cat | ls' should behave in a "normal way".
Try to execute a long command with a ton of arguments.
Have fun with that beautiful minishell and enjoy it!
echo Evaluate the bonus part if, and only if, the mandatory part has been entirely and perfectly done, and the error management handles unexpected or bad usage. In case all the mandatory points were not passed during the defense, bonus points must be totally ignored.
echo Evaluate the bonus part if, and only if, the mandatory part has been entirely and perfectly done, and the error management handles unexpected or bad usage. In case all the mandatory points were not passed during the defense, bonus points "must be totally" ignored.
cat file | grep bla | more
ls >out <in <in <out >out
ls >out <in <in <out >>out
ls >out <out >>out
ls >out <out >>out
ls >out <out >>out
ls >out <out >>out
ls >out <out >>out
ls >out <out >>out
ls >out <out >>out
ls >out <out >>out
ls >out <out >>out
ls >out <out >>out
ls
awk
unset PATH
ls
export PATH=test1:test2
env
ls
exit
cd ../..
pwd
cd ..
pwd
cd ..
pwd
exit
pwd
cd ..
pwd
cd .
pwd
cd ksadlkad
pwd
/bin/ls
cd minishell
/bin/ls
$OLDPWD
env
unset COLORTERM
env
unset HOME=
env
unset ajsdkjad
unset 2332
exit >out
exit <in5
$PWD
$PWD
echo $PWD
echo $PWD
echo $PWD
env
echo $PWD
echo $ PWD
echo $"PWD"
echo $'PWD'
echo $"PWD"
echo $?
echo
exit
$PWD
echo $PWD
echo $PWD
echo $PWD
$PWD
echo $PWD
echo $'PWD'
echo $"PWD"
echo $PWD=
make
exit
echo $PWD
exit
echo $
echo "$"
echo '$'
exit
echo $?
echo $
echo "$"
echo '$'
exit
echo $PWD$USER
env
echo $PWD:$SHELL
echo $PWD:$Shell
exit
"l"'s'
exit
"l"'s'
"l s"
exit
"l s"
"l"'s'
"."/'m'"ini"s'h''e'"ll"
"."/'m'"ini"s'h'e'"ll"
exit
cat <minishell.h>./outfiles/outfile
cat <minishell.h>./outfiles/outfile
exit
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
clear
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
clear
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
cat <"./test_files/infile" >"./outfiles/outfile01"
exit
cat <minishell.h>./outfiles/outfile
cat <minishell.h>outfile
echo $?
exit
env
echo $PWD
$PWD
"$PWD"
env
echo "$USER"
export USER+=okarejok
touch a
echo			hi
echo
hello
hello
echo	hello
ext
exit
echo	hello
echo "tab	tab"	"tab	tab"
echo "tab	tab""tab		tab"
echo "tab	tab""tab		tab"
exit
hello
hey
exit
$EMPTY echo hi
echo $EMPTY hi
export IN="<in"
env
$IN cat
env
touch in
$IN cat
$IN cat
$IN cat
export QUOTE='"'
env
echo "hello $QUOTE
echo $QUOTE hello"
exit
export QUOTE='"'
echo $QUOTE hello"
exit
export QUOTE='"'
echo $QUOTE hello"
ls | echo $QUOTE hello"
exit
export IN="<in"
cat $IN
exit
export LS=ls
$LS
exit
exit <in
exit <aksjddkaf
exit <aksjddkaf
exit <aksjddkaf
exit
exit <aksjddkaf | exit <asdad
exit
